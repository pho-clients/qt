/**
 * Social Graph API
 * Pho Networks REST API
 *
 * OpenAPI spec version: 1.1.1
 * Contact: emre@phonetworks.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#include "SWGEdge.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGEdge::SWGEdge(QString* json) {
    init();
    this->fromJson(*json);
}

SWGEdge::SWGEdge() {
    init();
}

SWGEdge::~SWGEdge() {
    this->cleanup();
}

void
SWGEdge::init() {
    id = NULL;
    head = NULL;
    tail = NULL;
    class = new QString("");
}

void
SWGEdge::cleanup() {
    
    if(id != nullptr) {
        delete id;
    }

    if(head != nullptr) {
        delete head;
    }

    if(tail != nullptr) {
        delete tail;
    }

    if(class != nullptr) {
        delete class;
    }
}

SWGEdge*
SWGEdge::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGEdge::fromJsonObject(QJsonObject &pJson) {
    ::Swagger::setValue(&id, pJson["id"], "SWGUUID", "SWGUUID");
    ::Swagger::setValue(&head, pJson["head"], "SWGUUID", "SWGUUID");
    ::Swagger::setValue(&tail, pJson["tail"], "SWGUUID", "SWGUUID");
    ::Swagger::setValue(&class, pJson["class"], "QString", "QString");
}

QString
SWGEdge::asJson ()
{
    QJsonObject* obj = this->asJsonObject();

    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGEdge::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    toJsonValue(QString("id"), id, obj, QString("SWGUUID"));

    toJsonValue(QString("head"), head, obj, QString("SWGUUID"));

    toJsonValue(QString("tail"), tail, obj, QString("SWGUUID"));

    toJsonValue(QString("class"), class, obj, QString("QString"));

    return obj;
}

SWGUUID*
SWGEdge::getId() {
    return id;
}
void
SWGEdge::setId(SWGUUID* id) {
    this->id = id;
}

SWGUUID*
SWGEdge::getHead() {
    return head;
}
void
SWGEdge::setHead(SWGUUID* head) {
    this->head = head;
}

SWGUUID*
SWGEdge::getTail() {
    return tail;
}
void
SWGEdge::setTail(SWGUUID* tail) {
    this->tail = tail;
}

QString*
SWGEdge::getClass() {
    return class;
}
void
SWGEdge::setClass(QString* class) {
    this->class = class;
}



} /* namespace Swagger */

