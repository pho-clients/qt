/**
 * Social Graph API
 * Pho Networks REST API
 *
 * OpenAPI spec version: 1.1.1
 * Contact: emre@phonetworks.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


#include "SWGNode.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {


SWGNode::SWGNode(QString* json) {
    init();
    this->fromJson(*json);
}

SWGNode::SWGNode() {
    init();
}

SWGNode::~SWGNode() {
    this->cleanup();
}

void
SWGNode::init() {
    id = NULL;
    context = NULL;
    creator = NULL;
    class = new QString("");
}

void
SWGNode::cleanup() {
    
    if(id != nullptr) {
        delete id;
    }

    if(context != nullptr) {
        delete context;
    }

    if(creator != nullptr) {
        delete creator;
    }

    if(class != nullptr) {
        delete class;
    }
}

SWGNode*
SWGNode::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGNode::fromJsonObject(QJsonObject &pJson) {
    ::Swagger::setValue(&id, pJson["id"], "SWGUUID", "SWGUUID");
    ::Swagger::setValue(&context, pJson["context"], "SWGUUID", "SWGUUID");
    ::Swagger::setValue(&creator, pJson["creator"], "SWGUUID", "SWGUUID");
    ::Swagger::setValue(&class, pJson["class"], "QString", "QString");
}

QString
SWGNode::asJson ()
{
    QJsonObject* obj = this->asJsonObject();

    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGNode::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    toJsonValue(QString("id"), id, obj, QString("SWGUUID"));

    toJsonValue(QString("context"), context, obj, QString("SWGUUID"));

    toJsonValue(QString("creator"), creator, obj, QString("SWGUUID"));

    toJsonValue(QString("class"), class, obj, QString("QString"));

    return obj;
}

SWGUUID*
SWGNode::getId() {
    return id;
}
void
SWGNode::setId(SWGUUID* id) {
    this->id = id;
}

SWGUUID*
SWGNode::getContext() {
    return context;
}
void
SWGNode::setContext(SWGUUID* context) {
    this->context = context;
}

SWGUUID*
SWGNode::getCreator() {
    return creator;
}
void
SWGNode::setCreator(SWGUUID* creator) {
    this->creator = creator;
}

QString*
SWGNode::getClass() {
    return class;
}
void
SWGNode::setClass(QString* class) {
    this->class = class;
}



} /* namespace Swagger */

